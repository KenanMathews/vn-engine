# test-cases/basic-tests.yaml

category: "Basic Functionality"
description: "Core VN Engine features and basic operations"
priority: 1

tests:
  - name: "Simple Dialogue Display"
    description: "Tests basic dialogue rendering and continuation"
    script: |
      simple_dialogue:
        - "Hello, this is a simple dialogue line."
        - "This is the second line."
        - speaker: "Character"
          say: "This line has a speaker."
        - "Final line without speaker."
    scene: "simple_dialogue"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Hello, this is a simple dialogue line."
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "This is the second line."
      - action: "continue"
        expected:
          type: "display_dialogue"
          speaker: "Character"
          content: "This line has a speaker."
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Final line without speaker."
      - action: "continue"
        expected:
          type: "scene_complete"

  - name: "Basic Variables"
    description: "Tests variable setting and retrieval"
    script: |
      variable_test:
        - actions:
            - type: setVar
              key: player_name
              value: "Alice"
            - type: setVar
              key: player_level
              value: 5
        - "Hello {{player_name}}!"
        - "You are level {{player_level}}."
        - actions:
            - type: addVar
              key: player_level
              value: 1
        - "Level up! You are now level {{player_level}}."
    scene: "variable_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Hello Alice!"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "You are level 5."
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Level up! You are now level 6."
    final_state:
      variables:
        player_name: "Alice"
        player_level: 6

  - name: "Basic Choices"
    description: "Tests simple choice mechanics"
    script: |
      choice_test:
        - text: "What is your favorite color?"
          choices:
            - text: "Red"
              actions:
                - type: setVar
                  key: favorite_color
                  value: "red"
              goto: red_chosen
            - text: "Blue"
              actions:
                - type: setVar
                  key: favorite_color
                  value: "blue"
              goto: blue_chosen
      red_chosen:
        - "You chose red! A bold choice."
      blue_chosen:
        - "You chose blue! A calming choice."
    scene: "choice_test"
    steps:
      - action: "validate"
        expected:
          type: "show_choices"
          content: "What is your favorite color?"
          choices_count: 2
      - action: "choice"
        choice_index: 0
        expected:
          type: "display_dialogue"
          content: "You chose red! A bold choice."
    final_state:
      variables:
        favorite_color: "red"

  - name: "Story Flags"
    description: "Tests flag setting and checking"
    script: |
      flag_test:
        - actions:
            - type: setFlag
              flag: met_wizard
        - "{{#hasFlag 'met_wizard'}}You have met the wizard before.{{else}}This is your first time meeting the wizard.{{/hasFlag}}"
        - actions:
            - type: clearFlag
              flag: met_wizard
        - "{{#hasFlag 'met_wizard'}}You have met the wizard before.{{else}}The wizard's memory has been erased.{{/hasFlag}}"
    scene: "flag_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "You have met the wizard before."
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "The wizard's memory has been erased."

  - name: "Basic Math Helpers"
    description: "Tests basic mathematical operations"
    script: |
      math_test:
        - actions:
            - type: setVar
              key: base_damage
              value: 10
            - type: setVar
              key: bonus_damage
              value: 5
        - "Base damage: {{base_damage}}"
        - "Bonus damage: {{bonus_damage}}"
        - "Total damage: {{add base_damage bonus_damage}}"
        - "Damage after reduction: {{subtract (add base_damage bonus_damage) 3}}"
        - "Critical hit: {{multiply (add base_damage bonus_damage) 2}}"
    scene: "math_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Base damage: 10"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Bonus damage: 5"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Total damage: 15"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Damage after reduction: 12"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Critical hit: 30"

  - name: "String Helpers"
    description: "Tests string manipulation helpers"
    script: |
      string_test:
        - actions:
            - type: setVar
              key: player_name
              value: "alice smith"
        - "Original name: {{player_name}}"
        - "Capitalized: {{capitalize player_name}}"
        - "Uppercase: {{uppercase player_name}}"
        - "Title case: {{titleCase player_name}}"
        - "Truncated: {{truncate player_name 8 '...'}}"
    scene: "string_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Original name: alice smith"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Capitalized: Alice smith"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Uppercase: ALICE SMITH"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Title case: Alice Smith"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Truncated: alice..."

  - name: "Conditional Logic"
    description: "Tests if/else conditional statements"
    script: |
      conditional_test:
        - actions:
            - type: setVar
              key: player_health
              value: 75
        - "{{#if (gt player_health 50)}}You are in good health.{{else}}You need healing.{{/if}}"
        - actions:
            - type: setVar
              key: player_health
              value: 25
        - "{{#if (gt player_health 50)}}You are in good health.{{else}}You need healing.{{/if}}"
        - "{{#if (eq player_health 25)}}Health is exactly 25.{{else}}Health is not 25.{{/if}}"
    scene: "conditional_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "You are in good health."
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "You need healing."
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Health is exactly 25."

  - name: "Scene Navigation"
    description: "Tests scene jumps and navigation"
    script: |
      nav_start:
        - "This is the starting scene."
        - text: "Where do you want to go?"
          choices:
            - text: "Go to scene A"
              goto: scene_a
            - text: "Go to scene B"
              goto: scene_b
      scene_a:
        - "Welcome to Scene A!"
        - goto: nav_end
      scene_b:
        - "Welcome to Scene B!"
        - goto: nav_end
      nav_end:
        - "You have reached the end."
    scene: "nav_start"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "This is the starting scene."
      - action: "continue"
        expected:
          type: "show_choices"
          choices_count: 2
      - action: "choice"
        choice_index: 1  # Choose scene B
        expected:
          type: "display_dialogue"
          content: "Welcome to Scene B!"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "You have reached the end."

  - name: "Player Choice Memory"
    description: "Tests playerChose helper function"
    script: |
      memory_test:
        - text: "Make a choice that will be remembered:"
          choices:
            - text: "Choose the sword"
              actions:
                - type: setFlag
                  flag: chose_sword
              goto: memory_check
            - text: "Choose the shield"
              actions:
                - type: setFlag
                  flag: chose_shield
              goto: memory_check
      memory_check:
        - "{{#playerChose 'Choose the sword'}}You previously chose the sword.{{else}}You did not choose the sword.{{/playerChose}}"
        - "{{#playerChose 'Choose the shield'}}You previously chose the shield.{{else}}You did not choose the shield.{{/playerChose}}"
        - "{{#hasFlag 'chose_sword'}}Sword flag is set.{{/hasFlag}}"
        - "{{#hasFlag 'chose_shield'}}Shield flag is set.{{/hasFlag}}"
    scene: "memory_test"
    steps:
      - action: "validate"
        expected:
          type: "show_choices"
          choices_count: 2
      - action: "choice"
        choice_index: 0  # Choose sword
        expected:
          type: "display_dialogue"
          content: "You previously chose the sword."
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "You did not choose the shield."
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Sword flag is set."
    final_state:
      flags: ["chose_sword"]

# Template-only tests for quick validation
template_tests:
  - template: "{{add 2 3}}"
    expected: "5"
    description: "Basic addition"
  
  - template: "{{subtract 10 4}}"
    expected: "6"
    description: "Basic subtraction"
  
  - template: "{{multiply 3 4}}"
    expected: "12"
    description: "Basic multiplication"
  
  - template: "{{divide 15 3}}"
    expected: "5"
    description: "Basic division"
  
  - template: '{{uppercase "hello"}}'
    expected: "HELLO"
    description: "String uppercase"
  
  - template: '{{lowercase "WORLD"}}'
    expected: "world"
    description: "String lowercase"
  
  - template: '{{capitalize "test"}}'
    expected: "Test"
    description: "String capitalize"
  
  - template: "{{eq 5 5}}"
    expected: "true"
    description: "Equality comparison true"
  
  - template: "{{eq 5 3}}"
    expected: "false"
    description: "Equality comparison false"
  
  - template: "{{gt 10 5}}"
    expected: "true"
    description: "Greater than comparison"
  
  - template: "{{and true true}}"
    expected: "true"
    description: "Logical AND true"
  
  - template: "{{or false true}}"
    expected: "true"
    description: "Logical OR true"