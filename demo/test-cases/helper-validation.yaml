# test-cases/helper-validation.yaml
# Comprehensive helper function validation

category: "Helper Validation"
description: "Validates all template helpers across all categories"
priority: 3

# Pure template tests for helper validation
template_tests:
  # Math Helpers
  - template: "{{add 15 25}}"
    expected: "40"
    description: "Math: Addition"
  
  - template: "{{subtract 100 35}}"
    expected: "65"
    description: "Math: Subtraction"
  
  - template: "{{multiply 8 9}}"
    expected: "72"
    description: "Math: Multiplication"
  
  - template: "{{divide 144 12}}"
    expected: "12"
    description: "Math: Division"
  
  - template: "{{mod 17 5}}"
    expected: "2"
    description: "Math: Modulo"
  
  - template: "{{abs -15}}"
    expected: "15"
    description: "Math: Absolute value"
  
  - template: "{{min 5 10 15 3}}"
    expected: "3"
    description: "Math: Minimum"
  
  - template: "{{max 5 10 15 3}}"
    expected: "15"
    description: "Math: Maximum"
  
  - template: "{{round 3.14159 2}}"
    expected: "3.14"
    description: "Math: Rounding"
  
  - template: "{{ceil 3.1}}"
    expected: "4"
    description: "Math: Ceiling"
  
  - template: "{{floor 3.9}}"
    expected: "3"
    description: "Math: Floor"
  
  - template: "{{clamp 15 0 10}}"
    expected: "10"
    description: "Math: Clamp"
  
  - template: "{{percentage 25 100}}"
    expected: "25"
    description: "Math: Percentage"
  
  - template: "{{formatNumber 3.14159 2}}"
    expected: "3.14"
    description: "Math: Number formatting"

  # String Helpers
  - template: '{{uppercase "hello world"}}'
    expected: "HELLO WORLD"
    description: "String: Uppercase"
  
  - template: '{{lowercase "HELLO WORLD"}}'
    expected: "hello world"
    description: "String: Lowercase"
  
  - template: '{{capitalize "hello world"}}'
    expected: "Hello world"
    description: "String: Capitalize"
  
  - template: '{{titleCase "hello world"}}'
    expected: "Hello World"
    description: "String: Title case"
  
  - template: '{{trim "  hello  "}}'
    expected: "hello"
    description: "String: Trim"
  
  - template: '{{truncate "this is a long string" 10 "..."}}'
    expected: "this is..."
    description: "String: Truncate"
  
  - template: '{{replace "hello world" "world" "universe"}}'
    expected: "hello universe"
    description: "String: Replace"
  
  - template: '{{repeat "ha" 3}}'
    expected: "hahaha"
    description: "String: Repeat"
  
  - template: '{{reverse "hello"}}'
    expected: "olleh"
    description: "String: Reverse"
  
  - template: '{{wordCount "hello world test"}}'
    expected: "3"
    description: "String: Word count"
  
  - template: '{{slugify "Hello World Test"}}'
    expected: "hello-world-test"
    description: "String: Slugify"

  # Array Helpers
  - template: '{{length (array "a" "b" "c" "d")}}'
    expected: "4"
    description: "Array: Length"
  
  - template: '{{first (array "apple" "banana" "cherry")}}'
    expected: "apple"
    description: "Array: First element"
  
  - template: '{{last (array "apple" "banana" "cherry")}}'
    expected: "cherry"
    description: "Array: Last element"
  
  - template: '{{join (array "a" "b" "c") ", "}}'
    expected: "a, b, c"
    description: "Array: Join"
  
  - template: '{{includes (array "a" "b" "c") "b"}}'
    expected: "true"
    description: "Array: Includes"
  
  - template: '{{isEmpty (array)}}'
    expected: "true"
    description: "Array: Is empty"

  # Comparison Helpers
  - template: "{{eq 42 42}}"
    expected: "true"
    description: "Comparison: Equal (true)"
  
  - template: "{{eq 42 24}}"
    expected: "false"
    description: "Comparison: Equal (false)"
  
  - template: "{{ne 42 24}}"
    expected: "true"
    description: "Comparison: Not equal"
  
  - template: "{{gt 15 10}}"
    expected: "true"
    description: "Comparison: Greater than"
  
  - template: "{{gte 10 10}}"
    expected: "true"
    description: "Comparison: Greater than or equal"
  
  - template: "{{lt 5 10}}"
    expected: "true"
    description: "Comparison: Less than"
  
  - template: "{{lte 10 10}}"
    expected: "true"
    description: "Comparison: Less than or equal"
  
  - template: "{{and true true}}"
    expected: "true"
    description: "Comparison: Logical AND (true)"
  
  - template: "{{and true false}}"
    expected: "false"
    description: "Comparison: Logical AND (false)"
  
  - template: "{{or false true}}"
    expected: "true"
    description: "Comparison: Logical OR (true)"
  
  - template: "{{or false false}}"
    expected: "false"
    description: "Comparison: Logical OR (false)"
  
  - template: "{{not false}}"
    expected: "true"
    description: "Comparison: Logical NOT"

  # VN-Specific Helpers
  - template: "{{formatTime 90}}"
    expected: "1h 30m"
    description: "VN: Format time (hours)"
  
  - template: "{{formatTime 45}}"
    expected: "45m"
    description: "VN: Format time (minutes)"

  # Asset Helpers
  - template: "{{formatFileSize 1024}}"
    expected: "1.0 KB"
    description: "Asset: File size KB"
  
  - template: "{{formatFileSize 1048576}}"
    expected: "1.0 MB"
    description: "Asset: File size MB"
  
  - template: "{{formatFileSize 1073741824}}"
    expected: "1.0 GB"
    description: "Asset: File size GB"
  
  - template: "{{formatFileSize 0}}"
    expected: "0 B"
    description: "Asset: File size zero"
  
  - template: "{{getMediaType 'image.jpg'}}"
    expected: "image"
    description: "Asset: Media type image"
  
  - template: "{{getMediaType 'song.mp3'}}"
    expected: "audio"
    description: "Asset: Media type audio"
  
  - template: "{{getMediaType 'video.mp4'}}"
    expected: "video"
    description: "Asset: Media type video"
  
  - template: "{{getMediaType 'document.pdf'}}"
    expected: "unknown"
    description: "Asset: Media type unknown"
  
  - template: "{{normalizeKey 'Test File Name.JPG'}}"
    expected: "test_file_name"
    description: "Asset: Key normalization"
  
  - template: "{{normalizeKey 'complex-file_name.PNG'}}"
    expected: "complex_file_name"
    description: "Asset: Key normalization complex"

# Full test cases for complex helper scenarios
tests:
  - name: "Helper Integration Test"
    description: "Tests combining multiple helpers in complex expressions"
    script: |
      integration_test:
        - actions:
            - type: setVar
              key: numbers
              value: [10, 5, 15, 3, 8, 20]
            - type: setVar
              key: name
              value: "john doe"
        - "Numbers: {{join numbers ', '}}"
        - "Stats: Min={{min numbers}}, Max={{max numbers}}, Avg={{round (average numbers) 1}}"
        - "Name processing: '{{name}}' → '{{titleCase (trim name)}}'"
        - "Complex calc: {{add (multiply (first numbers) 2) (divide (last numbers) 4)}}"
        - "Boolean logic: {{and (gt (max numbers) 15) (lt (min numbers) 5)}}"
    scene: "integration_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Numbers: 10, 5, 15, 3, 8, 20"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Stats: Min=3, Max=20, Avg=10.2"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Name processing: 'john doe' → 'John Doe'"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Complex calc: 25"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Boolean logic: true"

  - name: "Edge Cases and Error Handling"
    description: "Tests helper behavior with edge cases and invalid inputs"
    script: |
      edge_case_test:
        - "Division by zero: {{divide 10 0}}"
        - "Negative modulo: {{mod -7 3}}"
        - "Empty string operations: '{{uppercase ''}}'"
        - "Null/undefined handling: {{length undefined_var}}"
        - "Invalid array operations: {{first 'not_an_array'}}"
        - "Out of bounds: {{#with (array 'a' 'b')}}{{this.[5]}}{{/with}}"
        - "Type coercion: {{add 'abc' 5}}"
        - "Boolean with numbers: {{and 1 0}}"
    scene: "edge_case_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Division by zero: 0"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Negative modulo: 2"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Empty string operations: ''"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Null/undefined handling: 0"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Invalid array operations: "
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Out of bounds: "
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Type coercion: 5"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Boolean with numbers: false"

  - name: "Performance Test with Large Data"
    description: "Tests helper performance with larger datasets"
    script: |
      performance_test:
        - actions:
            - type: setVar
              key: large_array
              value: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
            - type: setVar
              key: long_text
              value: "Lorem ipsum dolor sit amet consectetur adipiscing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua"
        - "Large array length: {{length large_array}}"
        - "Array sum: {{sum large_array}}"
        - "Array average: {{round (average large_array) 2}}"
        - "Text word count: {{wordCount long_text}}"
        - "Text truncated: {{truncate long_text 50 '...'}}"
        - "Multiple operations: {{titleCase (truncate (replace long_text 'Lorem' 'Test') 30 '...')}}"
    scene: "performance_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Large array length: 20"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Array sum: 210"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Array average: 10.5"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Text word count: 19"
      - action: "continue"
        expected:
          type: "display_dialogue"
          contains: "Text truncated: Lorem ipsum dolor sit amet consectetur..."
      - action: "continue"
        expected:
          type: "display_dialogue"
          contains: "Test Ipsum Dolor Sit Amet..."

  - name: "Nested Helper Calls"
    description: "Tests deeply nested helper function calls"
    script: |
      nested_test:
        - actions:
            - type: setVar
              key: data
              value: { scores: [85, 92, 78, 96, 88], player: { name: "alice smith", level: 15 } }
        - "Player: {{titleCase data.player.name}} (Level {{data.player.level}})"
        - "Best score: {{max data.scores}}"
        - "Average: {{round (average data.scores) 1}}"
        - "Performance: {{#if (gt (average data.scores) 85)}}Excellent{{else}}Good{{/if}}"
        - "Formatted: '{{uppercase (first (words (titleCase data.player.name)))}}'"
        - "Complex: {{add (multiply data.player.level 2) (divide (sum data.scores) (length data.scores))}}"
    scene: "nested_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Player: Alice Smith (Level 15)"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Best score: 96"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Average: 87.8"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Performance: Excellent"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Formatted: 'ALICE'"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Complex: 117.8"