# demo/test-cases/stress-tests.yaml
# Performance and stress tests for VN Engine

category: "Stress & Performance"
description: "Tests engine performance under load and complex scenarios"
priority: 4

tests:
  - name: "Large Variable Set"
    description: "Tests handling of many variables"
    script: |
      large_var_test:
        - actions:
            - type: setVar
              key: data
              value:
                stats: { health: 100, mana: 75, strength: 12, intelligence: 15, dexterity: 10, constitution: 14, wisdom: 8, charisma: 13 }
                equipment: { weapon: { name: "Legendary Sword", damage: 45, enchantments: ["fire", "sharpness", "durability"] }, armor: { name: "Dragon Scale Mail", defense: 35, enchantments: ["protection", "fire_resist"] } }
                inventory: [
                  { name: "Health Potion", quantity: 5, value: 50 },
                  { name: "Mana Potion", quantity: 3, value: 75 },
                  { name: "Rare Gem", quantity: 1, value: 1000 },
                  { name: "Ancient Scroll", quantity: 2, value: 500 }
                ]
                skills: { combat: 15, magic: 12, stealth: 8, persuasion: 10, survival: 6 }
                relationships: { alice: 85, bob: 45, charlie: 92, diana: 67, eric: 23 }
        - "Character loaded with {{length data.inventory}} items"
        - "Total base stats: {{add data.stats.health data.stats.mana data.stats.strength data.stats.intelligence}}"
        - "Equipment value: {{add data.equipment.weapon.damage data.equipment.armor.defense}}"
        - "Inventory value: {{sum (pluck data.inventory 'value')}}"
        - "Average skill: {{round (average (pluck (array data.skills.combat data.skills.magic data.skills.stealth data.skills.persuasion data.skills.survival) '.') 1}}"
    scene: "large_var_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Character loaded with 4 items"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Total base stats: 202"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Equipment value: 80"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Inventory value: 1625"
      - action: "continue"
        expected:
          type: "display_dialogue"
          contains: "Average skill:"

  - name: "Deep Nesting Performance"
    description: "Tests deeply nested object access"
    script: |
      deep_nest_test:
        - actions:
            - type: setVar
              key: world
              value:
                regions:
                  north:
                    kingdoms:
                      frostland:
                        cities:
                          icecrown:
                            districts:
                              castle:
                                rooms:
                                  throne_room:
                                    occupants: ["King Frost", "Royal Guard"]
                                    temperature: -5
        - "Deep access: {{world.regions.north.kingdoms.frostland.cities.icecrown.districts.castle.rooms.throne_room.temperature}}°C"
        - "Occupants: {{join world.regions.north.kingdoms.frostland.cities.icecrown.districts.castle.rooms.throne_room.occupants ', '}}"
        - "Room count: {{length (array world.regions.north.kingdoms.frostland.cities.icecrown.districts.castle.rooms.throne_room)}}"
        - "First occupant: {{first world.regions.north.kingdoms.frostland.cities.icecrown.districts.castle.rooms.throne_room.occupants}}"
    scene: "deep_nest_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Deep access: -5°C"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Occupants: King Frost, Royal Guard"
      - action: "continue"
        expected:
          type: "display_dialogue"
          contains: "Room count:"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "First occupant: King Frost"

  - name: "Large Array Processing"
    description: "Tests performance with large arrays"
    script: |
      large_array_test:
        - actions:
            - type: setVar
              key: large_numbers
              value: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
            - type: setVar
              key: soldiers
              value: [
                { name: "Captain Alpha", level: 10, hp: 100 },
                { name: "Sergeant Beta", level: 8, hp: 85 },
                { name: "Private Gamma", level: 5, hp: 70 },
                { name: "Private Delta", level: 5, hp: 70 },
                { name: "Private Epsilon", level: 4, hp: 65 },
                { name: "Private Zeta", level: 4, hp: 65 },
                { name: "Private Eta", level: 3, hp: 60 },
                { name: "Private Theta", level: 3, hp: 60 },
                { name: "Private Iota", level: 2, hp: 55 },
                { name: "Private Kappa", level: 2, hp: 55 }
              ]
        - "Array size: {{length large_numbers}}"
        - "Sum: {{sum large_numbers}}"
        - "Average: {{round (average large_numbers) 1}}"
        - "Max: {{max large_numbers}}, Min: {{min large_numbers}}"
        - "First 5: {{join (take large_numbers 5) ', '}}"
        - "Last 5: {{join (take (reverse large_numbers) 5) ', '}}"
        - "Army size: {{length soldiers}}"
        - "Total HP: {{sum (pluck soldiers 'hp')}}"
        - "Average level: {{round (average (pluck soldiers 'level')) 1}}"
        - "High level soldiers: {{join (pluck (where soldiers 'level' 8) 'name') ', '}}"
    scene: "large_array_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Array size: 30"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Sum: 465"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Average: 15.5"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Max: 30, Min: 1"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "First 5: 1, 2, 3, 4, 5"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Last 5: 30, 29, 28, 27, 26"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Army size: 10"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Total HP: 685"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Average level: 4.6"
      - action: "continue"
        expected:
          type: "display_dialogue"
          contains: "High level soldiers:"

  - name: "Complex Template Stress"
    description: "Tests complex nested template expressions"
    script: |
      template_stress_test:
        - actions:
            - type: setVar
              key: game_state
              value:
                player: { name: "Hero", level: 15, class: "warrior" }
                party: [{ name: "Mage", level: 12, mp: 80 }, { name: "Rogue", level: 14, stealth: 90 }]
                location: "dungeon"
                time: 1440
                difficulty: "hard"
        - "Complex calculation: {{multiply (add (average (pluck game_state.party 'level')) game_state.player.level) (ifx (eq game_state.difficulty 'hard') 2 1)}}"
        - "Party info: {{#each game_state.party}}{{name}} (Lv.{{level}}{{#if mp}}, {{mp}}MP{{/if}}{{#if stealth}}, {{stealth}} Stealth{{/if}}){{#unless @last}} | {{/unless}}{{/each}}"
        - "Status: {{#if (and (gte game_state.player.level 10) (eq game_state.location 'dungeon'))}}Ready for boss fight{{else}}Not ready{{/if}}"
        - "Time display: {{formatTime game_state.time}} ({{#if (gte game_state.time 1440)}}Next day{{else}}Same day{{/if}})"
        - "Class check: {{#eq game_state.player.class 'warrior'}}Warrior abilities available{{else}}Different class{{/eq}}"
    scene: "template_stress_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Complex calculation: 82"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Party info: Mage (Lv.12, 80MP) | Rogue (Lv.14, 90 Stealth)"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Status: Ready for boss fight"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Time display: 24h 0m (Next day)"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Class check: Warrior abilities available"

  - name: "Rapid State Changes"
    description: "Tests rapid succession of state modifications"
    script: |
      rapid_changes_test:
        - actions:
            - type: setVar
              key: counter
              value: 0
            - type: setFlag
              flag: rapid_test_start
        - actions:
            - type: setVar
              key: counter
              value: "{{add counter 1}}"
            - type: setVar
              key: counter
              value: "{{add counter 2}}"
            - type: setVar
              key: counter
              value: "{{add counter 3}}"
            - type: setVar
              key: counter
              value: "{{add counter 4}}"
            - type: setVar
              key: counter
              value: "{{add counter 5}}"
        - "Counter after rapid additions: {{counter}}"
        - actions:
            - type: setFlag
              flag: flag_1
            - type: setFlag
              flag: flag_2
            - type: setFlag
              flag: flag_3
            - type: removeFlag
              flag: flag_2
            - type: setFlag
              flag: flag_4
            - type: setFlag
              flag: flag_5
        - "Flags set: {{#hasFlag 'flag_1'}}1{{/hasFlag}}{{#hasFlag 'flag_2'}}2{{/hasFlag}}{{#hasFlag 'flag_3'}}3{{/hasFlag}}{{#hasFlag 'flag_4'}}4{{/hasFlag}}{{#hasFlag 'flag_5'}}5{{/hasFlag}}"
    scene: "rapid_changes_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Counter after rapid additions: 15"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Flags set: 1345"
    final_state:
      variables:
        counter: 15
      flags: ["rapid_test_start", "flag_1", "flag_3", "flag_4", "flag_5"]

  - name: "Memory Intensive Operations"
    description: "Tests operations that might stress memory usage"
    script: |
      memory_test:
        - actions:
            - type: setVar
              key: massive_object
              value:
                level_1: { level_2: { level_3: { level_4: { level_5: { data: "deep" } } } } }
                arrays: { numbers: [1,2,3,4,5,6,7,8,9,10], strings: ["a","b","c","d","e","f","g","h","i","j"] }
                copies: { copy1: "duplicate", copy2: "duplicate", copy3: "duplicate", copy4: "duplicate", copy5: "duplicate" }
        - "Deep value: {{massive_object.level_1.level_2.level_3.level_4.level_5.data}}"
        - "Array processing: {{join (reverse massive_object.arrays.numbers) ', '}}"
        - "String processing: {{join (reverse massive_object.arrays.strings) ''}}"
        - "Unique values: {{join (unique (array massive_object.copies.copy1 massive_object.copies.copy2 massive_object.copies.copy3)) ', '}}"
        - "Complex nested access: {{length massive_object.arrays.numbers}} numbers, {{length massive_object.arrays.strings}} strings"
    scene: "memory_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Deep value: deep"
      - action: "continue"
        expected:
          type: "display_dialogue"
          contains: "Array processing:"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "String processing: jihgfedcba"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Unique values: duplicate"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Complex nested access: 10 numbers, 10 strings"

  - name: "Performance Benchmarking"
    description: "Tests performance with repeated operations"
    script: |
      performance_test:
        - actions:
            - type: setVar
              key: benchmark
              value:
                iterations: 100
                data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                multiplier: 2
        - "Starting performance test..."
        - "Base calculation: {{multiply benchmark.iterations benchmark.multiplier}}"
        - "Array operations: {{sum benchmark.data}} total from {{length benchmark.data}} items"
        - "Complex nested: {{add (multiply benchmark.iterations 2) (sum benchmark.data)}}"
        - "String operations: {{join (take (repeat (array benchmark.iterations) 5) 3) ', '}}"
        - "Mathematical chain: {{round (divide (multiply benchmark.iterations benchmark.multiplier) (length benchmark.data)) 2}}"
        - "Performance test complete!"
    scene: "performance_test"
    steps:
      - action: "validate"
        expected:
          type: "display_dialogue"
          content: "Starting performance test..."
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Base calculation: 200"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Array operations: 55 total from 10 items"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Complex nested: 255"
      - action: "continue"
        expected:
          type: "display_dialogue"
          contains: "String operations:"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Mathematical chain: 20"
      - action: "continue"
        expected:
          type: "display_dialogue"
          content: "Performance test complete!"